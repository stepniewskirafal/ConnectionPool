/*
 * This file is generated by jOOQ.
 */
package database.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectionPoolTest implements Serializable {

    private static final long serialVersionUID = 1L;

    private String id;
    private String test;

    public ConnectionPoolTest() {}

    public ConnectionPoolTest(ConnectionPoolTest value) {
        this.id = value.id;
        this.test = value.test;
    }

    public ConnectionPoolTest(
        String id,
        String test
    ) {
        this.id = id;
        this.test = test;
    }

    /**
     * Getter for <code>connectionpool.connection_pool_test.id</code>.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>connectionpool.connection_pool_test.id</code>.
     */
    public ConnectionPoolTest setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>connectionpool.connection_pool_test.test</code>.
     */
    public String getTest() {
        return this.test;
    }

    /**
     * Setter for <code>connectionpool.connection_pool_test.test</code>.
     */
    public ConnectionPoolTest setTest(String test) {
        this.test = test;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ConnectionPoolTest other = (ConnectionPoolTest) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.test == null) {
            if (other.test != null)
                return false;
        }
        else if (!this.test.equals(other.test))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.test == null) ? 0 : this.test.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ConnectionPoolTest (");

        sb.append(id);
        sb.append(", ").append(test);

        sb.append(")");
        return sb.toString();
    }
}
